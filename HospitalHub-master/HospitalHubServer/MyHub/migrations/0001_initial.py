# Generated by Django 3.1.1 on 2020-10-26 10:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('doctorid', models.IntegerField(db_column='DoctorID', primary_key=True, serialize=False)),
                ('doctorfirstname', models.CharField(blank=True, db_column='DoctorFirstName', max_length=100, null=True)),
                ('doctorlastname', models.CharField(blank=True, db_column='DoctorLastName', max_length=100, null=True)),
            ],
            options={
                'db_table': 'Doctor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('hospid', models.IntegerField(db_column='HospID', primary_key=True, serialize=False)),
                ('hospname', models.CharField(blank=True, db_column='HospName', max_length=100, null=True)),
                ('hospbuilding', models.CharField(blank=True, db_column='HospBuilding', max_length=25, null=True)),
                ('hospstreet', models.CharField(blank=True, db_column='HospStreet', max_length=25, null=True)),
                ('hosppincode', models.IntegerField(blank=True, db_column='HospPinCode', null=True, unique=True)),
                ('hospbeds', models.IntegerField(blank=True, db_column='HospBeds', null=True)),
                ('hospavailbed', models.IntegerField(blank=True, db_column='HospAvailBed', null=True)),
                ('hospambid', models.IntegerField(blank=True, db_column='HospAmbID', null=True, unique=True)),
            ],
            options={
                'db_table': 'Hospital',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hosppaymode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hospid', models.IntegerField(blank=True, db_column='HospID', null=True)),
                ('hosppaymode', models.CharField(blank=True, db_column='HospPayMode', max_length=10, null=True)),
            ],
            options={
                'db_table': 'HospPayMode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hospphoneno',
            fields=[
                ('hospid', models.IntegerField(db_column='HospID', primary_key=True, serialize=False)),
                ('hospphoneno', models.CharField(db_column='HospPhoneNo', max_length=10)),
            ],
            options={
                'db_table': 'HospPhoneNo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hosppincodemodel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hospcity', models.CharField(blank=True, db_column='HospCity', max_length=25, null=True)),
                ('hospcountry', models.CharField(blank=True, db_column='HospCountry', max_length=25, null=True)),
            ],
            options={
                'db_table': 'HospPincode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userid', models.IntegerField(db_column='UserID', primary_key=True, serialize=False)),
                ('useremailid', models.CharField(db_column='UserEmailID', max_length=25, unique=True)),
                ('userphone', models.CharField(blank=True, db_column='UserPhone', max_length=10, null=True, unique=True)),
                ('userbday', models.DateField(blank=True, db_column='UserBDay', null=True)),
                ('usergenderid', models.IntegerField(blank=True, db_column='UserGenderID', null=True, unique=True)),
                ('usercity', models.CharField(blank=True, db_column='UserCity', max_length=25, null=True)),
                ('userbuilding', models.CharField(blank=True, db_column='UserBuilding', max_length=25, null=True)),
                ('userstreet', models.CharField(blank=True, db_column='UserStreet', max_length=25, null=True)),
                ('userpincode', models.IntegerField(blank=True, db_column='UserPinCode', null=True)),
                ('userprofilepicadd', models.CharField(blank=True, db_column='UserProfilePicAdd', max_length=100, null=True)),
            ],
            options={
                'db_table': 'User',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Amb',
            fields=[
                ('ambid', models.OneToOneField(db_column='AmbID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='MyHub.hospital')),
                ('ambvehicletype', models.CharField(blank=True, db_column='AmbVehicleType', max_length=25, null=True, unique=True)),
            ],
            options={
                'db_table': 'Amb',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Doctoredu',
            fields=[
                ('doctorid', models.OneToOneField(db_column='DoctorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='MyHub.doctor')),
                ('doctordegree', models.CharField(db_column='DoctorDegree', max_length=25)),
                ('doctoruni', models.CharField(blank=True, db_column='DoctorUni', max_length=25, null=True)),
            ],
            options={
                'db_table': 'DoctorEdu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Doctorspeciality',
            fields=[
                ('doctorid', models.OneToOneField(db_column='DoctorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='MyHub.doctor')),
                ('doctorspeciality', models.CharField(db_column='DoctorSpeciality', max_length=100)),
            ],
            options={
                'db_table': 'DoctorSpeciality',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usercomplaint',
            fields=[
                ('userid', models.OneToOneField(db_column='UserID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='MyHub.user')),
                ('usercomplaintid', models.IntegerField(db_column='UserComplaintID')),
                ('usercomplaintdate', models.DateField(blank=True, db_column='UserComplaintDate', null=True)),
                ('usercomplaint', models.CharField(blank=True, db_column='UserComplaint', max_length=100, null=True)),
            ],
            options={
                'db_table': 'UserComplaint',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usergender',
            fields=[
                ('genderid', models.OneToOneField(db_column='GenderID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='MyHub.user')),
                ('gendername', models.CharField(blank=True, db_column='GenderName', max_length=25, null=True)),
            ],
            options={
                'db_table': 'UserGender',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vehicletype',
            fields=[
                ('ambvehicletype', models.OneToOneField(db_column='AmbVehicleType', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='MyHub.amb')),
                ('vehiclecap', models.IntegerField(blank=True, db_column='VehicleCap', null=True)),
            ],
            options={
                'db_table': 'VehicleType',
                'managed': False,
            },
        ),
    ]
